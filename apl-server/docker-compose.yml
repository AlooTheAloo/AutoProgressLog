services:
  apl-db:
    image: postgres:latest
    hostname: apl-db
    container_name: apl-db
    restart: always
    ports:
      - "5432:5432"
    env_file: .env.db
    networks: [chromanet_dev]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20

  apl-server:
    build:
      context: .
      dockerfile: apl-dev.Dockerfile
    ports:
      - "8080:3000"
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      apl-db:
        condition: service_healthy
    env_file: .env.server
    networks: [chromanet_dev]

  apl-storage:
    build:
      context: .
      dockerfile: storage-dev.Dockerfile
    ports:
      - "8081:2727"
    volumes:
      - ./apl-storage/public:/app/apl-storage/public
    networks: [chromanet_dev]
    env_file: .env.server

  prisma-studio:
    image: oven/bun:latest
    working_dir: /app
    volumes:
      - .:/app
    command: bunx prisma studio --port 5555 --browser none
    ports:
      - "5555:5555"
    env_file: .env.server
    networks: [chromanet_dev]
    depends_on:
      apl-db:
        condition: service_healthy
      apl-server:
        condition: service_started

networks:
  chromanet_dev:
    name: chromanet_dev
