import { Toggl } from './toggl';
export declare class Projects {
    protected toggl: Toggl;
    constructor(toggl: Toggl);
    users: {
        /**
         * GET Get workspace projects users​
         * List all projects users for a given workspace.
         *
         * https://developers.track.toggl.com/docs/api/projects#get-get-workspace-projects-users
         */
        list: (workspaceId: number) => Promise<any>;
        /**
         * POST Add an user into workspace projects users​
         * Include a project user for a given workspace.
         *
         * https://developers.track.toggl.com/docs/api/projects#post-add-an-user-into-workspace-projects-users
         */
        add: (workspaceId: number, body?: {
            labourCost?: number;
            manager?: boolean;
            postedFields?: string[];
            projectId?: number;
            userId?: number;
        }) => Promise<any>;
        /**
         * PATCH Patch project users from workspace​
         * Patch a list of project users for a given workspace.
         *
         * https://developers.track.toggl.com/docs/api/projects#patch-patch-project-users-from-workspace
         */
        set: (workspaceId: number, query: {
            projectUserIds: number[];
        }) => Promise<any>;
        /**
         * PUT Update an user into workspace projects users​
         * Update the data for a project user for a given workspace.
         *
         * https://developers.track.toggl.com/docs/api/projects#put-update-an-user-into-workspace-projects-users
         */
        update: (workspaceId: number, projectUserId: number, body?: {
            labourCost?: number;
            manager?: boolean;
            postedFields?: string[];
        }) => Promise<any>;
        /**
         * DELETE Delete a project user from workspace projects users​
         * Delete a project user for a given workspace.
         *
         * https://developers.track.toggl.com/docs/api/projects#delete-delete-a-project-user-from-workspace-projects-users
         */
        delete: (workspaceId: number, projectUserId: number) => Promise<any>;
    };
    /**
     * GET WorkspaceProjects​
     * Get projects for given workspace.
     *
     * https://developers.track.toggl.com/docs/api/projects#get-workspaceprojects
     */
    list(workspaceId: number, body?: {
        active?: boolean;
        billable?: boolean;
        clientId?: number[];
        groupIds?: number[];
        name?: string;
        onlyTemplates?: boolean;
        page?: number;
        perPage?: number;
        since?: Date | number;
        sortField?: string;
        uid?: number;
        userIds?: number[];
        wid?: number;
    }): Promise<any>;
    /**
     * POST WorkspaceProjects​
     * Create project for given workspace.
     *
     * https://developers.track.toggl.com/docs/api/projects#post-workspaceprojects
     */
    create(workspaceId: number, body?: IWorkspaceProjectParams): Promise<any>;
    /**
     * PATCH WorkspaceProjects​
     * Bulk editing workspace projects.
     *
     * https://developers.track.toggl.com/docs/api/projects#patch-workspaceprojects
     */
    updateBulk(workspaceId: number, projectIds: number[], body?: {
        op?: string;
        path?: string;
    }): Promise<any>;
    /**
     * GET WorkspaceProject
     * Get project for given workspace.
     *
     * https://developers.track.toggl.com/docs/api/projects#get-workspaceproject
     */
    get(workspaceId: number, projectId: number): Promise<any>;
    /**
     * POST WorkspaceProject
     * Post project for given workspace.
     *
     * https://developers.track.toggl.com/docs/api/projects#post-workspaceproject
     */
    update(workspaceId: number, projectId: number, body?: IWorkspaceProjectParams): Promise<any>;
    /**
     * DELETE WorkspaceProject
     * Delete project for given workspace.
     *
     * https://developers.track.toggl.com/docs/api/projects#delete-workspaceproject
     */
    delete(workspaceId: number, projectId: number): Promise<any>;
}
export interface IWorkspaceProjectParams {
    active?: boolean;
    auto_estimates?: boolean;
    billable?: boolean;
    client_id?: number;
    client_name?: string;
    color?: string;
    currency?: string;
    estimated_hours?: number;
    foreign_id?: string;
    is_private?: boolean;
    name?: string;
    postedFields?: string[];
    rate_change_mode?: string;
    recurring?: boolean;
    recurring_parameters?: string[];
    template?: boolean;
    template_id?: number;
}
export interface IUser {
    at: string;
    gid: number;
    group_id: number;
    id: number;
    labour_cost: number;
    manager: boolean;
    project_id: number;
    user_id: number;
    workspace_id: number;
}
export interface IWorkspaceProject {
    active: boolean;
    actual_bours: number;
    at: string;
    auto_estimates: boolean;
    billable: boolean;
    cid: number;
    client_id: number;
    color: string;
    created_at: string;
    currency: string;
    current_period?: {
        end_date: string;
        start_date: string;
    };
    estimated_hours: number;
    foreign_id?: string;
    id: number;
    is_private: boolean;
    name: string;
    recurring: boolean;
    recurring_parameters: string[];
    server_deleted_at: string;
    template: boolean;
    wid: number;
    workspace_id: number;
}
export interface UpdateBulkResponse {
    failure: any;
    success: any;
}
