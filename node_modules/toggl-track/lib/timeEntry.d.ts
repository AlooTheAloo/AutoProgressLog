import { Toggl } from './toggl';
export declare class TimeEntry {
    protected toggl: Toggl;
    constructor(toggl: Toggl);
    /**
     * GET TimeEntries​
     * Lists latest time entries.
     *
     * https://developers.track.toggl.com/docs/api/time_entry#get-timeentries
     */
    list(query?: {
        before?: string;
        since?: string;
        startDate?: Date | string;
        endDate?: Date | string;
    }): Promise<any>;
    /**
     * GET Get current time entry​
     * Load running time entry for user ID.
     *
     * https://developers.track.toggl.com/docs/api/time_entry#get-get-current-time-entry
     */
    current(): Promise<any>;
    /**
     * POST TimeEntries​
     * Creates a new workspace TimeEntry.
     *
     * https://developers.track.toggl.com/docs/api/time_entry#post-timeentries
     */
    create(workspaceId: number, body?: ITimeEntryParams): Promise<any>;
    /**
     * PATCH Bulk editing time entries​
     * In short: http://tools.ietf.org/html/rfc6902 and http://tools.ietf.org/html/rfc6901 with some additions. Patch will be executed partially when there are errors with some records. No transaction, no rollback.
     *
     * https://developers.track.toggl.com/docs/api/time_entry#patch-bulk-editing-time-entries
     */
    updateBulk(timeEntryIds: number[], workspaceId: number, body?: {
        op?: string;
        path: string;
    }): Promise<any>;
    /**
     * PUT TimeEntries​
     * Updates a workspace time entry.
     *
     * https://developers.track.toggl.com/docs/api/time_entry#put-timeentries
     */
    update(timeEntryId: number, workspaceId: number, body?: ITimeEntryParams): Promise<any>;
    /**
     * DELETE TimeEntries​
     * Deletes a workspace time entry.
     *
     * https://developers.track.toggl.com/docs/api/time_entry#delete-timeentries
     */
    delete(timeEntryId: number, workspaceId: number): Promise<any>;
    /**
     * PATCH TimeEntries​
     * Stops a workspace time entry.
     *
     * https://developers.track.toggl.com/docs/api/time_entries/index.html#patch-stop-timeentry
     */
    stop(timeEntryId: number, workspaceId: number): Promise<any>;
}
export interface ITimeEntryParams {
    billable?: boolean;
    created_with?: string;
    description?: string;
    duration?: number;
    duronly?: boolean;
    postedFields?: string[];
    project_id?: number;
    start?: string;
    start_date?: string;
    stop?: string;
    stop_date?: string;
    tag_action?: string;
    tag_ids?: number[];
    tags?: string[];
    task_id?: number;
    user_id?: number;
    workspace_id?: number;
}
export interface ITimeEntry {
    at: string;
    billable: boolean;
    description: string;
    duration: number;
    duronly: boolean;
    id: number;
    pid: number;
    project_id: number;
    server_deleted_at: string;
    start: string;
    stop: string;
    tag_ids?: number[];
    tags?: string[];
    task_id: number | null;
    tid: number;
    uid: number;
    user_id: number;
    wid: number;
    workspace_id: number;
}
export interface IUpdateBulkResponse {
    failure: any;
    success: any;
}
